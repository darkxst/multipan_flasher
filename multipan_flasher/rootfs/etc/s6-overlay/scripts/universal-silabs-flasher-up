#!/usr/bin/with-contenv bashio
# ==============================================================================
# Start universal-silabs-flasher
# ==============================================================================

set -e

declare autoflash_firmware
declare device
declare bootloader_baudrate
declare firmware
declare verbose
declare usb_device_path
declare usb_manufacturer
declare usb_vendor
declare usb_product
declare usb_product_id
declare gpio_reset_flag
declare exit_status
declare sdk
declare silabs




function cleanup() {
    exit_status=$?
    bashio::log.info "universal-silabs-flasher-up script exited with code ${exit_status}"
    echo "${exit_status}" > /run/s6-linux-init-container-results/exitcode

    /run/s6/basedir/bin/halt
}
trap cleanup EXIT

function exit_no_firmware {
    bashio::log.warning "No firmware found for the selected device, assuming firmware is installed."
    exit 0
}

device=$(bashio::config 'device')
bootloader_baudrate=$(bashio::config 'bootloader_baudrate')
gpio_reset_flag=""
sdk="4.3.1"

if [ -d /sys/devices/platform/soc/fe201000.serial/tty/ttyAMA0 ] && [ "${device}" == "/dev/ttyAMA0" ] \
        && bashio::config.equals 'hardware' 'elelabs'; then
    firmware="rcp-uart-802154-v${sdk}-elelabs-elx0x3-460800.gbl"
elif [ -d /sys/devices/platform/ff590000.serial/tty/ttyS4 ] && [ "${device}" == "/dev/ttyS4" ] \
        && bashio::config.equals 'hardware' 'ihost'; then
    firmware="rcp-uart-802154-v${sdk}-zbdonglee-460800.gbl"
else
    # Check USB device manufacturer/product information
    usb_device_path=$(realpath /sys/class/tty/$(readlink /sys/class/tty/$(basename ${device}) | sed 's:/[^/]*tty[^/]*::g' )/../)
    if [ ! -f "${usb_device_path}/idProduct" ]; then
        bashio::log.info "The selected serial port is not a USB device."
        exit_no_firmware
    fi

    if [ ! -f "${usb_device_path}/product" ]; then
        bashio::log.info "USB device is missing manufacturer or product name."
        exit_no_firmware
    fi
    usb_product=$(cat "${usb_device_path}/product")
    usb_vendor=$(cat "${usb_device_path}/idVendor")
    usb_product_id=$(cat "${usb_device_path}/idProduct")
    if [ -f "${usb_device_path}/manufacturer" ]; then
        usb_manufacturer=$(cat "${usb_device_path}/manufacturer")
    else
        usb_manufacturer=""
    fi

    bashio::log.info "Checking ${device} identifying ${usb_product} from ${usb_manufacturer}."
    if [[ "${usb_manufacturer}" == "ITEAD" && "${usb_product}" == "SONOFF Zigbee 3.0 USB Dongle Plus V2" ]]; then
        bashio::log.info "Detected Sonoff ZBDongle-E"
        firmware="rcp-uart-802154-v${sdk}-zbdonglee-460800.gbl"
        gpio_reset_flag="--sonoff-reset"
    # usb id 1a86:7523 CH340
    elif [[ "${usb_vendor}" == "1a86" && "${usb_product_id}" == "7523" ]]; then
        bashio::log.info "Selecting firmware for selected model"
        if bashio::config.has_value 'hardware'; then
            if bashio::config.equals 'hardware' 'zb-gw04-1v1'; then
                firmware="rcp-uart-802154-v${sdk}-zb-gw04-1v1-230400.gbl"
            elif bashio::config.equals 'hardware' 'zb-gw04-1v2'; then
                firmware="rcp-uart-802154-v${sdk}-zb-gw04-1v2-230400.gbl"
            elif bashio::config.equals 'hardware' 'elelabs'; then
                firmware="rcp-uart-802154-v${sdk}-elelabs-elx0x3-460800.gbl"
            fi
        fi
    else
        exit_no_firmware
    fi
fi

silabs=$(bashio::api.supervisor GET "/addons" false \
  'first(.addons[] | select(.state == "started" and (.slug | contains("silabs_multiprotocol")))) .slug')

if [ ! -z "$silabs" ]; then
    bashio::log.info "Stopping ${silabs} addon"
    bashio::addon.stop $silabs
fi

verbose=""
if bashio::config.true 'verbose'; then
    verbose="-v"
fi

bashio::log.info "Starting universal-silabs-flasher with ${device} (bootloader baudrate ${bootloader_baudrate})"
universal-silabs-flasher ${verbose} --device ${device} \
     --bootloader-baudrate "${bootloader_baudrate}" \
     flash ${gpio_reset_flag} --ensure-exact-version  --allow-cross-flashing --firmware "/root/${firmware}"

if [ ! -z "$silabs" ]; then
    bashio::log.info "Starting ${silabs} addon"
    bashio::addon.start $silabs
fi

